/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define QWERTY 1
#define GAMING 2
#define MOUS 3
#define NUMS 4
#define SYMS 5
#define CONFIG 6
#define GAMNUM 7

&lt {
        tapping-term-ms = <150>;
};

&mt {
        tapping-term-ms = <150>;
};

/ {
        macros {
                win_sleep: win_sleep {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp LG(X) &kp U &kp S>;
                };

                pin_num: pin_num {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp N0 &kp N8 &kp N0 &kp N8>;
                };

                test_macro: test_macro {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&macro_press &kp LSHFT>,
                                   <&macro_tap &kp U>,
                                   <&macro_release &kp LSHFT>,
                                   <&macro_tap &kp S>;
                };

                screen_macro: screen_macro {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp LG(LS(S))>;
                };

                thresh_macro: thresh_macro {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp RIGHT &kp UNDER &kp LS(T) &kp H &kp R &kp E &kp S &kp H &kp RET>;
                };

                my_num: my_num {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp N2 &kp N2 &kp N3 &kp N1 &kp N0 &kp N7 &kp N6 &kp N0 &kp N4>;
                };

                old: old {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp LS(R) &kp A &kp M &kp E &kp N &kp LS(G) &kp U &kp Y &kp N0 &kp N8 &kp N0 &kp N8 &kp LS(F) &kp RET>;
                };

                new25q1: new25q1 {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp LS(R) &kp A &kp M &kp E &kp N &kp LS(G) &kp U &kp Y &kp N0 &kp N8 &kp N0 &kp N8 &kp LS(G) &kp RET>;
                };

                comp_macro: comp_macro {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp LS(R) &kp A &kp M &kp E &kp N &kp LS(G) &kp U &kp Y &kp N0 &kp N8 &kp N0 &kp N8 &kp LS(R) &kp RET>;
                };

                pass: pass {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <50>;
                        tap-ms = <50>;
                        #binding-cells = <0>;
                        bindings = <&kp LS(R) &kp A &kp M &kp E &kp N &kp LS(G) &kp U &kp Y &kp N0 &kp N8 &kp N0 &kp N8 &kp EXCL &kp EXCL &kp RET>;
                };
        };
};

/ {
        behaviors {
                ht: hold_tap {
                        label = "hold_tap";
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <200>;
                        quick-tap-ms = <150>;
                        global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };

                td0: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <125>;
                        bindings = <&kp ESC>, <&tog QWERTY>;
                };

                td1: tap_dance_1 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LSHFT>, <&kp LGUI>;
                };

                td2: tap_dance_2 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <500>;
                        bindings = <&tog NUMS>, <&tog MOUS>, <&tog GAMING>;
                };

                td3: tap_dance_3 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LCTRL>, <&kp CAPS>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSPC
   &td3 &kp A &ht LALT R &ht LCTRL S &ht LSHFT T &kp G   &kp M &ht RSHFT N  &ht RCTRL E &ht RALT I   &kp O    &kp SQT
   &td1 &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &td2
                  &td0 &kp DEL &lt NUMS SPACE   &lt SYMS SPACE &kp BSPC &lt CONFIG RET
                        >;
                };

                qwerty_layer {

                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &tog QWERTY &mo NUMS &kp SPACE    &kp RET &mo 3 &kp RALT
                        >;
                };

                gaming_layer {

                        bindings = <
    &kp ESC &kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P 
    &kp LALT &kp LSHFT &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp RET 
    &none &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &tog GAMING 
                        &none &mo GAMNUM &kp SPACE &kp BSPC &none &kp RET
                        >;
                };

                mousing_layer {
                        bindings = <
    &trans &trans &kp LA(RET) &kp LA(F1) &mkp RCLK &trans &trans &trans &kp UP &trans &trans &trans
    &kp LC(A) &trans &kp LCTRL &kp LSHFT &mkp LCLK &kp SPACE &trans &kp LEFT &kp DOWN &kp RIGHT &trans &trans
    &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &mkp MCLK &trans &trans &trans &trans &trans &trans &tog MOUS
                        &kp LC(S) &kp DEL &lt NUMS SPACE   &kp SPACE &kp BSPC &trans
                        >;
                };

                number_layer {

                        bindings = <
   &kp GRAVE &kp KP_NLCK &kp N7 &kp N8 &kp N9  &kp DEL    &trans &trans   &kp UP   &trans &trans &trans
   &kp PSCRN  &kp RET &kp N4 &ht LCTRL N5 &ht LSHFT N6  &kp BSPC    &trans &kp LEFT &kp DOWN &kp RIGHT &trans &trans
   &kp INSERT &kp N0 &kp N1 &kp N2 &kp N3 &kp DOT    &trans &trans &trans &trans &trans &tog NUMS
                  &trans &trans &trans                    &trans &trans &trans
                        >;
                };

                symbol_layer {

                        bindings = <
    &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp PIPE &kp COLON &kp BSPC
    &kp LCTRL &kp BSLH &kp LBRC &kp LBKT &kp LPAR &kp MINUS &kp EQUAL &kp RPAR &kp RBKT &kp RBRC &kp FSLH &trans
    &kp LSHFT &trans &kp SQT &kp DQT &kp LT &kp UNDER &kp PLUS &kp GT &trans &trans &trans &trans 
                  &trans &trans  &trans  &trans  &trans  &kp C_SLEEP 
                        >;
                };

                bluetooth_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 &kp  F9    &kp F10 &kp F11 &kp F12
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &screen_macro &old &comp_macro &pass &none &none
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &win_sleep   &pin_num   &new25q1 &my_num  &thresh_macro &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &trans
                        >;
                };

                gamnum_layer {

                        bindings = <
   &kp GRAVE &kp KP_NLCK &kp N7 &kp N8 &kp N9  &kp DEL    &trans &trans   &kp UP   &trans &trans &trans
   &kp PSCRN  &kp RET &kp N4 &kp N5 &kp N6  &kp BSPC    &trans &kp LEFT &kp DOWN &kp RIGHT &trans &trans
   &kp INSERT &kp N0 &kp N1 &kp N2 &kp N3 &kp DOT    &trans &trans &trans &trans &trans &tog NUMS
                  &trans &trans &trans                    &trans &trans &trans
                        >;
                };
        };
};
